#!/usr/bin/env bash

NC='\033[0m' # No Color
RED='\e[0;31m'
YELLOW='\e[1;33m'
GREEN='\e[0;32m'

INPUT_FILE=$1
MESSAGE=`head -n1 $INPUT_FILE`
MESSAGE_CHECK=`echo $MESSAGE | grep -w "feat\|fix\|docs\|breaking\|demo\|test\|revert"`

MAX_LENGTH=70
MIN_LENGTH=10
commit_regex='(A20-[0-9]+)'

if (( ${#MESSAGE} > MAX_LENGTH )); then
  printf "${RED}ERROR: Commit message was ${YELLOW}${#MESSAGE}${RED} characters long, but should be at most ${YELLOW}$MAX_LENGTH${NC}"
  exit 1
fi

if (( MIN_LENGTH > ${#MESSAGE} )); then
  printf "${RED}ERROR: Commit message was ${YELLOW}${#MESSAGE}${RED} characters long, but should be higher that ${YELLOW}$MIN_LENGTH${NC}"
  exit 1
fi

if [[ $MESSAGE =~ ^WIP ]]; then
  exit 0
fi

if [ -z "$MESSAGE_CHECK" ]; then
  printf "${RED}ERROR: Your commit message must begin with one of the following\n${YELLOW}"
  echo "  feat (feature-name)"
  echo "  fix (fix-name)"
  echo "  test (test)"
  echo "  demo (demo)"
  echo "  docs (docs-name)"
  echo "  breaking (breaking-change)"
  echo "  revert (revert-change)${NC}"
  exit 1
fi

if ! [[ "$MESSAGE" =~ $commit_regex ]]; then
  printf "${RED}Your commit message must end with the following\n${YELLOW}"
  echo "(A20-****)"
  echo "Where is the JIRA ID?${NC}"
  exit 1
fi

printf "${GREEN}commit message successfully${NC}"
