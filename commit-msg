NC='\033[0m' # No Color
WHITE='\e[1;37m'
BLACK='\e[0;30m'
BLUE='\e[0;34m'
LIGHT_BLUE='\e[1;34m'
GREEN='\e[0;32m'
LIGHT_GREEN='\e[1;32m'
CYAN='\e[0;36m'
LIGHT_CYAN='\e[1;36m'
RED='\e[0;31m'
LIGHT_RED='\e[1;31m'
PURPLE='\e[0;35m'
LIGHT_PURPLE='\e[1;35m'
BROWN='\e[0;33m'
YELLOW='\e[1;33m'
GRAY='\e[0;30m'
LIGHT_GRAY='\e[0;37m'

INPUT_FILE=$1
MESSAGE=`head -n1 $INPUT_FILE`

echo "here -> $MESSAGE"

MAX_LENGTH=70
MIN_LENGTH= 10
TYPES="chore demo docs feat fix refactor revert style test"
PATTERN="^([a-z]+)\([a-z\-\*]+\)\:\ (.*)$"

if [[ ${#MESSAGE} > $MAX_LENGTH ]]; then
  printf "${RED}ERROR: Commit message was ${YELLOW}${#MESSAGE}${RED} characters long, but should be at most $MAX_LENGTH characters${NC}"
  exit 1
fi

if [[ $MIN_LENGTH > ${#MESSAGE} ]]; then
  printf "${RED}ERROR: Commit message was ${YELLOW}${#MESSAGE}${RED} characters long, but should be higher that $MIN_LENGTH${NC}"
  exit 1
fi

if [[ "$MESSAGE" =~ ^WIP ]]; then
  exit 0
fi

if ! [[ "$MESSAGE" =~ $PATTERN ]]; then
  printf "${RED}ERROR: Commit message did not match with any JIRA ID${NC}"
  exit 1
fi

TYPE=${BASH_REMATCH[1]}

if ! [[ $TYPES =~ (^| )$TYPE($| ) ]]; then
  echo "${RED}ERROR: Commit message's type ${YELLOW}'$TYPE'${NC} must be one of '$TYPES'${NC}"
  exit 1
fi
